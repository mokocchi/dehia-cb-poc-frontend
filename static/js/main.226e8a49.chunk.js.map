{"version":3,"sources":["redux/actions/index.js","redux/reducers/auth.js","redux/index.js","icons.js","components/UI/LoadSpinner.js","config.js","utils/utils.js","components/UI/Menu.js","components/Main/LoginButton.js","components/Main/loggedIn.js","utils/APIClient.js","utils/tokenManager.js","components/Main/MetricsPanel.js","components/Main/CollectPanel.js","components/Main/ResultsPanel.js","components/Main/Homepage.js","components/Main/HomepageContainer.js","components/UI/MenuContainer.js","screens/Main/Homepage.js","components/Main/Login.js","screens/Main/Login.js","App.js","index.js"],"names":["API_USER_FOUND","API_USER_EXPIRED","LOADING_API_USER","loadingApiUser","type","API_USER_LOGGED_OUT","apiUserLoggedOut","INITIAL_STATE","name","isLoading","combineReducers","auth","state","action","user","IconsCSS","FontAwesome_ttf","Entypo_ttf","Ionicons_ttf","MaterialIcons_ttf","MaterialCommunityIcons_ttf","style","document","createElement","styleSheet","cssText","appendChild","createTextNode","head","LoadSpinner","text","Form","Control","as","Button","variant","disabled","Spinner","animation","size","role","aria-hidden","API_HOST","API_BASE_URL","TOKEN_AUTH_URL","expired","expiresAt","Date","now","Menu","loggedIn","logout","Navbar","className","bg","Brand","onClick","LoginButton","pingGateway","a","axios","then","res","status","setState","loading","catch","error","console","log","conditionFunction","timeout","Promise","poll","resolve","setTimeout","_","waitFor","this","Row","Col","href","to","Component","mapStateToProps","WrappedComponent","connect","props","APIClient","post","token","response","error_code","data","accessToken","expiresIn","expires_in","setAuth","uri","parameters","json","validAuth","alert","tokenManager","expireUser","headers","url","method","body","user_message","authorizedRequest","object","stringify","loginFromStoredTokenId","JSON","getToken","authorizedGetRequest","authorizedPostRequest","authorizedDeleteRequest","store","client","dispatch","tokenString","sessionStorage","getItem","storedAuth","parse","reauthIfNeeded","storeUserIfValidJWT","jwtContents","JWT","jwtData","jwt","decode","exp","verifyJWTSignature","storeApiUser","login","window","location","pathname","setItem","search","removeItem","getCollectStatus","postResourceSwitch","deleteResourceSwitch","getResultsStatus","getResults","postCircuitBreakerSwitch","deleteCircuitBreakerSwitch","getCircuitBreakerStatus","MetricsPanel","metrics","cb","Card","Header","Body","testStarted","Alert","value","step","max","md","map","item","index","stopTest","startTest","collectVariant","collect","CollectPanel","cStatus","cError","cLoading","checked","onChangeCollect","font","color","resultsVariant","results","resultsLoading","ResultsPanel","rStatus","rError","rLoading","rResultsLoading","rData","rBreakerEnabled","circuitBreakerEnabled","rBreakerLoading","circuitBreakerLoading","onClickRetrieve","onChangeCircuitBreaker","Homepage","HomepageContainer","stop","elapsedTimes","length","time1","failed","undefined","time2","interval","getTime","avg","reduce","x","y","min","toFixed","developer_message","onChangeBreaker","enable","enableCircuitBreaker","disableCircuitBreaker","removeResourceSwitch","createResourceSwitch","loadCollectStatus","loadResultsStatus","loadStatus","MenuContainer","match","params","Container","padding","Login","history","push","LoginScreen","App","basename","marginTop","path","exact","component","User","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","initialize","loadApiUser","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.226e8a49.chunk.js","sourcesContent":["export const API_USER_FOUND = \"API_USER_FOUND\"\n\nexport function apiUserFound(user) {\n  return {\n    type: API_USER_FOUND,\n    user\n  }\n}\n\nexport const API_USER_EXPIRED = \"API_USER_EXPIRED\"\n\nexport function apiUserExpired() {\n  return {\n    type: API_USER_EXPIRED\n  }\n}\n\nexport const LOADING_API_USER = \"LOADING_API_USER\"\n\nexport function loadingApiUser() {\n  return {\n    type: LOADING_API_USER\n  }\n}\n\nexport const API_USER_LOGGED_OUT = \"API_USER_LOGGED_OUT\"\n\nexport function apiUserLoggedOut() {\n  return {\n    type: API_USER_LOGGED_OUT\n  }\n}","import { API_USER_FOUND, API_USER_EXPIRED, LOADING_API_USER, API_USER_LOGGED_OUT } from \"../actions\";\n\nconst INITIAL_STATE = {\n    name: null,\n    isLoading: false\n}\n\nexport default function auth(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case API_USER_FOUND:\n            return {\n                ...state,\n                name: action.user.name,\n                isLoading: false\n            }\n        case API_USER_EXPIRED:\n            return INITIAL_STATE;\n        case API_USER_LOGGED_OUT:\n            return INITIAL_STATE;\n        case LOADING_API_USER:\n            return {\n                ...INITIAL_STATE,\n                isLoading: true\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport auth from './reducers/auth';\n\nexport default combineReducers({\n    auth\n})","/* eslint-disable camelcase */\nimport FontAwesome_ttf from 'react-web-vector-icons/fonts/FontAwesome.ttf';\nimport Entypo_ttf from 'react-web-vector-icons/fonts/Entypo.ttf';\nimport Ionicons_ttf from 'react-web-vector-icons/fonts/Ionicons.ttf';\nimport MaterialIcons_ttf from 'react-web-vector-icons/fonts/MaterialIcons.ttf';\nimport MaterialCommunityIcons_ttf from 'react-web-vector-icons/fonts/MaterialCommunityIcons.ttf';\n\nconst IconsCSS = `\n@font-face {\n  src: url(${FontAwesome_ttf});\n  font-family: FontAwesome;\n}\n@font-face {\n  src: url(${Entypo_ttf});\n  font-family: Entypo;\n}\n@font-face {\n    src: url(${Ionicons_ttf});\n    font-family: Ionicons;\n}\n@font-face {\n    src: url(${MaterialIcons_ttf});\n    font-family: MaterialIcons;\n}\n@font-face {\n  src: url(${MaterialCommunityIcons_ttf});\n  font-family: MaterialCommunityIcons;\n}\n`;\n\nconst style = document.createElement('style');\nstyle.type = 'text/css';\nif (style.styleSheet) style.styleSheet.cssText = IconsCSS;\nelse style.appendChild(document.createTextNode(IconsCSS));\n\ndocument.head.appendChild(style);","import React from 'react';\nimport { Spinner, Button, Form } from 'react-bootstrap'\n\nfunction LoadSpinner({text}) {\n    return (\n        <Form.Control as={Button} variant=\"Light\" disabled>\n            <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n            />\n            {text || \"Loading...\"}\n        </Form.Control>\n    )\n}\n\nexport default LoadSpinner","export const API_HOST = 'http://localhost:8000'\n\nexport const API_BASE_URL = `${API_HOST}/api/v1.0`; \n\nexport const TOKEN_AUTH_URL = `${API_HOST}/login`;","import jwt from 'jsonwebtoken';\n\nexport function expired(expiresAt) {\n    return Date.now() > expiresAt;\n}\n\nexport function expiresAt(expiresIn) {\n    return Date.now() + expiresIn;\n}\n\nexport const waitFor = (conditionFunction, timeout = 400) => {\n    const poll = resolve => {\n        if (conditionFunction()) resolve();\n        else setTimeout(_ => poll(resolve), timeout);\n    }\n    return new Promise(poll);\n}\n\nexport const verifyJWTSignature = (JWT) => {\n    if(JWT) {\n        try {\n            const jwtData = jwt.decode(JWT);\n            return {\n                name: jwtData.name, exp: jwtData.exp\n            }        \n        } catch (error) {\n            return null;\n        }\n    } else {\n        return null;\n    }\n}","import React from 'react';\nimport { Button, Navbar } from 'react-bootstrap';\n\nconst Menu = ({ loggedIn, logout }) => <Navbar className=\"navbar\" bg=\"primary\">\n    <Navbar.Brand>Circuit Breaker PoC {loggedIn && \"- Dashboard\"}</Navbar.Brand>\n    {loggedIn &&\n        <Button onClick={logout} className=\"float-right\" variant=\"outline-light\">Logout</Button>\n    }\n</Navbar>\n\nexport default Menu;","import axios from 'axios';\nimport React from 'react';\nimport { Component } from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { API_HOST } from '../../config';\nimport { waitFor } from '../../utils/utils';\nimport LoadSpinner from '../UI/LoadSpinner';\nimport Menu from '../UI/Menu';\n\n//ping gateway\n\n\nclass LoginButton extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loading: true\n        }\n    }\n\n    pingGateway = async () => {\n        axios(API_HOST).then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    loading: false\n                })\n\n            }\n        }).catch(error => console.log(error));\n    }\n\n    componentDidMount() {\n        waitFor(_ => this.pingGateway() && (this.state.loading === false), 5000).then(_ =>\n            this.setState({\n                loading: false\n            })\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Menu loggedIn={false} />\n                {this.state.loading ? <div>\n                    <LoadSpinner text=\"Starting...\" />\n                </div>\n                    : <div className=\"App\">\n                        <Row>\n                            <Col>\n                                <p>This is a proof of concept for the <a href=\"https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker\">Circuit Breaker</a> pattern. <br />\n                                Log in to see the dashboard.<br />\n                                You have 15 minutes.\n                                </p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Link className=\"loginButton\" to=\"/login\">\n                                    <Button variant={\"outline-dark\"}>\n                                        Login\n            </Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </div>\n                }\n            </div>)\n    }\n}\n\nexport default LoginButton;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport LoadSpinner from \"../UI/LoadSpinner\";\nimport LoginButton from \"./LoginButton\";\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.auth\n    }\n}\nconst loggedIn = (WrappedComponent) => {\n    return connect(mapStateToProps)((props) =>\n        (props.auth.isLoading) ?\n            <LoadSpinner />\n            :\n            props.auth.name ?\n                < WrappedComponent {...props} />\n                :\n                <LoginButton {...props} />\n    )\n}\nexport default loggedIn;","import { TOKEN_AUTH_URL, API_BASE_URL } from \"../config\";\nimport { expired, expiresAt } from \"./utils\";\nimport axios from 'axios';\nimport tokenManager from \"./tokenManager\";\n\nexport default class APIClient {\n    setAuth(auth) {\n        this.auth = auth;\n    }\n\n    async login() {\n        return axios.post(TOKEN_AUTH_URL, {\n                //TODO: add ID\n                token: true\n        }).then(\n            response => {\n                if (response.error_code) {\n                    console.log(response);\n                } else {\n                    if (response.data) {\n                        const auth = {\n                            token: response.data.accessToken,\n                            expiresAt: expiresAt(response.data.expires_in)\n                        }\n                        this.setAuth(auth);\n                        return auth;\n                    }\n                    else {\n                        console.log(\"Auth error\")\n                        return null\n                    }\n                }\n            }\n        ).catch(error => {\n            console.log(error);\n            return null\n        })\n    }\n\n\n    validAuth(auth) {\n        return auth && auth.token && !expired(auth.expiresAt);\n    }\n\n    async authorizedRequest(uri, parameters = {}, json = true) {\n        if (!this.validAuth(this.auth)) {\n            console.log(\"Time's up, please log in again...\")\n            alert(\"Time is up! Please log in again\");\n            tokenManager.expireUser();\n        }\n        parameters.headers = {\n            \"Authorization\": \"Bearer \" + this.auth.token,\n            \"Content-Type\": json ? \"application/json\" : \"\"\n        }\n        try {\n            return await axios({ url: API_BASE_URL + uri, method: parameters.method, data: parameters.body || {}, headers: parameters.headers });\n        } catch (error) {\n            if (error.response.data) {\n                return error.response.data\n            } else {\n                return {\n                    user_message: \"There was an error\", error_code: 0\n                }\n            }\n        }\n    }\n\n    async authorizedGetRequest(uri) {\n        return this.authorizedRequest(uri);\n    }\n\n    async authorizedPostRequest(uri, object = {}, stringify = true) {\n        if (!this.validAuth(this.auth)) {\n            this.loginFromStoredTokenId();\n        }\n        return this.authorizedRequest(uri, {\n            body: stringify ? JSON.stringify(object) : object,\n            method: 'POST'\n        }, stringify)\n    }\n\n    authorizedPutRequest(uri, object, stringify = true) {\n        const token = this.getToken();\n        return this.authorizedRequest(token, uri, {\n            body: stringify ? JSON.stringify(object) : object,\n            method: 'PUT'\n        })\n    }\n\n    authorizedPatchRequest(uri, object, stringify = true) {\n        const token = this.getToken();\n        return this.authorizedRequest(token, uri, {\n            body: stringify ? JSON.stringify(object) : object,\n            method: 'PATCH'\n        })\n    }\n\n    authorizedDeleteRequest(uri) {\n        if (!this.validAuth(this.auth)) {\n            this.loginFromStoredTokenId();\n        }\n        return this.authorizedRequest(uri, { method: 'DELETE' });\n    }\n\n    getCollectStatus() {\n        return this.authorizedGetRequest('/collect-status');\n    }\n\n    postResourceSwitch() {\n        return this.authorizedPostRequest('/switch')\n    }\n\n    deleteResourceSwitch() {\n        return this.authorizedDeleteRequest('/switch')\n    }\n\n    getResultsStatus() {\n        return this.authorizedGetRequest('/results-status');\n    }\n\n    getResults() {\n        return this.authorizedGetRequest('/results');\n    }\n\n    postCircuitBreakerSwitch() {\n        return this.authorizedPostRequest('/circuit-breaker-switch');\n    }\n\n    deleteCircuitBreakerSwitch() {\n        return this.authorizedDeleteRequest('/circuit-breaker-switch')\n    }\n\n    getCircuitBreakerStatus() {\n        return this.authorizedGetRequest('/circuit-breaker-switch')\n    }\n}","import { apiUserFound, apiUserExpired, loadingApiUser } from '../redux/actions';\nimport { expired, verifyJWTSignature } from './utils';\nimport APIClient from './APIClient';\n\nexport default class tokenManager {\n\n    static store = null;\n\n    static initialize(store) {\n        this.store = store;\n        this.client = new APIClient();\n    }\n\n    static loadApiUser() {\n        this.store.dispatch(loadingApiUser());\n        const tokenString = sessionStorage.getItem('dehia.auth');\n        const storedAuth = tokenString ? JSON.parse(tokenString) : null;\n        if (storedAuth && storedAuth.token) {\n            this.reauthIfNeeded(storedAuth).then(\n                auth => {\n                    if (auth) {\n                        this.storeUserIfValidJWT(auth)\n                    } else {\n                        console.log(\"Couldn't fetch login data\")\n                        this.expireUser()\n                    }\n                }\n            ).catch(_ => this.expireUser())\n        } else {\n            console.log(\"Token not found\")\n            this.expireUser()\n        }\n    }\n\n    static storeUserIfValidJWT(auth) {\n        const token = auth.token;\n        const jwtContents = verifyJWTSignature(token);\n        if (jwtContents) {\n            const storedAuth = { token, expiresAt: jwtContents.exp * 1000 }\n            this.client.setAuth(storedAuth);\n            this.storeApiUser(storedAuth);\n            this.store.dispatch(apiUserFound({\n                name: jwtContents.name,\n            }))\n            return true;\n        } else {\n            console.log(\"JWT not valid\");\n            this.expireUser();\n            return false;\n        }\n    }\n\n    static async reauthIfNeeded(token) {\n        if (expired(token.expiresAt)) {\n            this.login()\n                .then(response => {\n                    console.log(response);\n                    if (response.data) {\n                        this.storeUserIfValidJWT(response.data);\n                    } else {\n                        if (response.error_code) {\n                            console.log(response.user_message);\n                        } else {\n                            console.log(\"Unknown error\");\n                        }\n                        this.expireUser();\n                    }\n                });\n        } else {\n            return token;\n        }\n    }\n\n    static expireUser() {\n        if (window.location.pathname !== \"/callback\") {\n            sessionStorage.setItem('returnPath', window.location.pathname + window.location.search);\n            sessionStorage.removeItem('dehia.auth');\n        }\n        this.store.dispatch(apiUserExpired());\n    }\n\n    static storeApiUser(auth) {\n        sessionStorage.setItem('dehia.auth', JSON.stringify(auth));\n        this.client.setAuth(auth);\n    }\n\n    static async login() {\n        return await this.client.login()\n    }\n\n    static async authorizedGetRequest(uri) {\n        return await this.client.authorizedGetRequest(uri);\n    }\n\n    static getCollectStatus() {\n        return this.client.getCollectStatus();\n    }\n\n    static createResourceSwitch() {\n        return this.client.postResourceSwitch();\n    }\n\n    static removeResourceSwitch() {\n        return this.client.deleteResourceSwitch();\n    }\n\n    static getResultsStatus() {\n        return this.client.getResultsStatus();\n    }\n\n    static getResults() {\n        return this.client.getResults();\n    }\n\n    static enableCircuitBreaker() {\n        return this.client.postCircuitBreakerSwitch();\n    }\n\n    static disableCircuitBreaker() {\n        return this.client.deleteCircuitBreakerSwitch();\n    }\n\n    static getCircuitBreakerStatus() {\n        return this.client.getCircuitBreakerStatus();\n    }\n}\n","import React from 'react';\nimport { Button, Card, Row, Spinner, Col, Alert } from 'react-bootstrap';\n\nconst MetricsPanel = ({ metrics, cb }) => {\n    return (\n        <Card>\n            <Card.Header>\n                <h3>Test the current configuration</h3>\n            </Card.Header>\n            <Card.Body>\n                {!metrics.testStarted ? <Button onClick={cb.startTest} variant=\"primary\">Start test</Button>\n                    :\n                    <div>\n                        <Row>\n                            <Alert variant=\"info\">*Metrics are taken from the frontend, and includes the trip [frontend -&gt; gateway -&gt; service1 (-&gt;service2 -&gt; service1) -&gt; gateway -&gt; frontend]</Alert>\n                            <Col>\n                                <progress value={metrics.step} max=\"10\"> 32% </progress>\n                            </Col>\n                            <Col>\n                                {metrics.loading &&\n                                    <Spinner animation=\"border\" role=\"status\" />\n                                }\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={12}>\n                                <ul>\n                                    {metrics.text.map((item, index) => <li key={index}>{item}</li>)}\n                                </ul>\n                            </Col>\n                            <Col>\n                                {metrics.loading ?\n                                    (<Button onClick={cb.stopTest} variant=\"danger\">Stop current test</Button>)\n                                    : (metrics.testStarted &&\n                                        <div>\n                                            <Button onClick={cb.startTest} variant=\"primary\">Restart test</Button>\n                                        </div>)\n                                }\n                            </Col>\n                        </Row>\n                    </div>\n                }\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default MetricsPanel;","import React from 'react';\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\nimport LoadSpinner from '../UI/LoadSpinner';\nimport Icon from 'react-web-vector-icons';\n\nconst collectVariant = (collect) => {\n    if (collect.loading) {\n        return \"secondary\";\n    }\n    if (collect.error) {\n        return \"danger\";\n    }\n    switch (collect.status) {\n        case \"OK\":\n            return \"success\";\n        case \"SUSPENDED\":\n            return \"warning\";\n        default:\n            return \"primary\";\n    }\n}\n\nconst CollectPanel = ({collect, cb}) => {\n    const cStatus = collect.status;\n    const cError = collect.error;\n    const cLoading = collect.loading;\n    return (<Card>\n        <Card.Header><h3>Collect Service</h3></Card.Header>\n        <Card.Body>\n            {cLoading ? <LoadSpinner /> : (\n                <Row>\n                    <Col>\n                        <Alert variant={collectVariant(collect)}>\n                            <Row>\n                                <Col>\n                                    Status: {cError ? cError : cStatus}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n\n                                    {collect.checked ?\n                                        <Button className=\"float-right\" variant=\"success\" disabled={collect.disabled} onClick={_ => cb.onChangeCollect(true)}>\n                                            Enable Endpoint <Icon name=\"ethernet-cable\" font=\"MaterialCommunityIcons\" color=\"white\" size={\"1.5rem\"} />\n                                        </Button>\n                                        :\n                                        <Button className=\"float-right\" variant=\"warning\" disabled={collect.disabled} onClick={_ => cb.onChangeCollect(false)}>\n                                            Disable Endpoint <Icon name=\"ethernet-cable-off\" font=\"MaterialCommunityIcons\" color=\"white\" size={\"1.5rem\"} />\n                                        </Button>\n                                    }\n                                </Col>\n                            </Row>\n                        </Alert>\n                    </Col>\n                </Row>\n            )}\n        </Card.Body>\n    </Card>)\n}\n\nexport default CollectPanel;","import React from 'react';\nimport { Alert, Button, Card, Col, Row } from 'react-bootstrap';\nimport LoadSpinner from '../UI/LoadSpinner';\nimport Icon from 'react-web-vector-icons';\n\nconst resultsVariant = (results) => {\n    if (results.resultsLoading) {\n        return \"secondary\";\n    }\n    if (results.error) {\n        return \"danger\";\n    }\n    switch (results.status) {\n        case \"OK\":\n            return \"success\";\n        case \"SUSPENDED\":\n            return \"warning\";\n        default:\n            return \"primary\";\n    }\n}\n\nconst ResultsPanel = ({ results, cb }) => {\n    const rStatus = results.status;\n    const rError = results.error;\n    const rLoading = results.loading;\n    const rResultsLoading = results.resultsLoading;\n    const rData = results.data;\n    const rBreakerEnabled = results.circuitBreakerEnabled;\n    const rBreakerLoading = results.circuitBreakerLoading;\n\n    return (<Card>\n        <Card.Header><h3>Results Service</h3></Card.Header>\n        <Card.Body>\n            {rLoading ? <LoadSpinner /> : (\n                <Row>\n                    <Col>\n                        <Alert variant={resultsVariant(results)}>\n                            <Row>\n                                <Col>\n                                    Status: {rError ? rError : (rResultsLoading ? \"Fetching results...\" : rStatus)} <br />\n                                    Circuit Breaker: {rBreakerEnabled ? \"Enabled\" : \"Disabled\"} <br /><br />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Button onClick={cb.onClickRetrieve}>Retrieve results <Icon name=\"download\" font=\"MaterialCommunityIcons\" color=\"white\" size={\"1.5rem\"} /></Button>\n                                    {rBreakerLoading ? <LoadSpinner />\n                                        :\n                                        rBreakerEnabled ? <Button variant=\"secondary\" onClick={_ => cb.onChangeCircuitBreaker(false)} className=\"float-right\"> Disable Circuit Breaker <Icon name=\"pipe\" font=\"MaterialCommunityIcons\" color=\"white\" size={\"1.5rem\"} /></Button>\n                                            : <Button variant=\"warning\" onClick={_ => cb.onChangeCircuitBreaker(true)} className=\"float-right\"> Enable Circuit Breaker <Icon name=\"pipe-disconnected\" font=\"MaterialCommunityIcons\" color=\"white\" size={\"1.5rem\"} /></Button>\n                                    }\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>&nbsp;</Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {rResultsLoading ? <LoadSpinner />\n                                        :\n                                        rData &&\n                                        <Card>\n                                            <Card.Header>\n                                                Results\n                                </Card.Header>\n                                            <Card.Body>\n\n                                                <ul>\n                                                    {rData.map((item, index) =>\n                                                        <li key={index}>{item}</li>\n                                                    )}\n                                                </ul>\n                                            </Card.Body>\n                                        </Card>\n                                    }\n                                </Col>\n                            </Row>\n                        </Alert>\n                    </Col>\n                </Row>\n            )}\n        </Card.Body>\n    </Card >)\n}\n\nexport default ResultsPanel;","import React from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\nimport MetricsPanel from './MetricsPanel';\nimport CollectPanel from './CollectPanel';\nimport ResultsPanel from './ResultsPanel';\n\nfunction Homepage({ name, collect, results, metrics, cb }) {\n    return <div>\n        <Row>\n            <Col>\n                <h2>\n                    {name}'s Session\n                    </h2>\n                    <Alert variant=\"warning\">The services and gateway are hosted on Heroku - Please be patient the first time you open the app</Alert>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <CollectPanel collect={collect} cb={cb} />\n                <MetricsPanel metrics={metrics} cb={cb}/>\n            </Col>\n            <Col>\n                <ResultsPanel results={results} cb={cb} />\n            </Col>\n        </Row>\n    </div>\n}\n\nexport default Homepage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport tokenManager from '../../utils/tokenManager';\nimport Homepage from './Homepage';\n\nclass HomepageContainer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            collect: {\n                loading: true,\n                error: null,\n                disabled: true,\n                checked: false,\n                status: null\n            },\n            results: {\n                loading: true,\n                resultsLoading: false,\n                error: null,\n                circuitBreakerEnabled: false,\n                circuitBreakerLoading: false,\n                data: null\n            },\n            metrics: {\n                testStarted: false,\n                step: 0,\n                text: [],\n                loading: false,\n                stop: false\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.loadStatus();\n    }\n\n    stopTest = _ => {\n        const metrics = this.state.metrics;\n        metrics.stop = true;\n        metrics.loading = false;\n        this.setState({\n            metrics\n        })\n    }\n\n    startTest = async _ => {\n        let metrics = this.state.metrics;\n        metrics.testStarted = true;\n        metrics.stop = false;\n        this.setState({\n            metrics\n        })\n        let text = [];\n        const elapsedTimes = [];\n        if (this.state.collect.status === \"OK\") {\n            text[0] = \"Operation should be normal. Sending first request...\";\n        } else {\n            if (this.state.results.circuitBreakerEnabled) {\n                text[0] = \"Circuit breaker enabled. Sending first request...\"\n            } else {\n                text[0] = \"Circuit breaker disabled. Sending first request...\"\n            }\n        }\n        metrics = this.state.metrics;\n        metrics.text = text;\n        metrics.loading = true;\n        this.setState({\n            metrics\n        })\n        for (let index = 1; index <= 10; index++) {\n            if (this.state.metrics.stop) {\n                text[text.length] = \"Test stopped\";\n                metrics.text = text;\n                this.setState({\n                    metrics\n                })\n                return;\n            }\n            const time1 = Date.now();\n            let failed;\n            try {\n                const response = await tokenManager.getResults();\n                failed = response.error_code !== undefined;\n            } catch (e) {\n                failed = true;\n            }\n            const time2 = Date.now();\n            const interval = new Date(time2).getTime() - new Date(time1).getTime();\n            text[index] = `Request ${index}. Elapsed time: ${interval}ms (${failed ? \"Failed\" : \"Success\"})`;\n            elapsedTimes[index - 1] = interval;\n            metrics.step = index;\n            metrics.text = text;\n            this.setState({\n                metrics\n            })\n        }\n        const avg = elapsedTimes.reduce((x, y) => x + y) / 10;\n        const max = elapsedTimes.reduce((x, y) => (x > y) ? x : y);\n        const min = elapsedTimes.reduce((x, y) => (x < y) ? x : y);\n        metrics.loading = false;\n        text[11] = `Average: ${avg.toFixed(2)}ms.`;\n        text[12] = `Max time: ${max}ms. Min time: ${min}ms`;\n        this.setState({\n            metrics\n        });\n    }\n\n    onClickRetrieve = _ => {\n        const results = this.state.results;\n        results.resultsLoading = true;\n        this.setState({\n            results\n        })\n        tokenManager.getResults().then(response => {\n            if (response.data) {\n                if (response.error_code) {\n                    const results = this.state.results;\n                    results.error = response.user_message;\n                    results.resultsLoading = false;\n                    results.data = null;\n                    this.setState({\n                        results\n                    })\n                } else {\n                    const results = this.state.results;\n                    results.data = response.data.results;\n                    results.resultsLoading = false;\n                    results.error = null;\n                    this.setState({\n                        results\n                    })\n                }\n            } else {\n                const results = this.state.results;\n                if (response.developer_message) {\n                    results.error = response.developer_message;\n                } else {\n                    results.error = \"Unknown Error\";\n                }\n                results.data = null;\n                results.resultsLoading = false;\n                this.setState({\n                    results\n                })\n            }\n        })\n    }\n\n    onChangeBreaker = (enable) => {\n        if (enable) {\n            const results = this.state.results;\n            results.circuitBreakerLoading = true;\n            this.setState({\n                results\n            })\n            tokenManager.enableCircuitBreaker().then(res => {\n                if (res.status !== 200) {\n\n                    if (res.error_code) {\n                        console.log(res);\n                        this.setState({\n                            results: {\n                                circuitBreakerEnabled: false,\n                                circuitBreakerLoading: false,\n                                error: \"Error\"\n                            }\n                        })\n\n                    } else {\n                        console.log(res)\n                        const results = this.state.results;\n                        results.circuitBreakerLoading = false;\n                        results.error = \"Unknown Error\"\n                        this.setState({\n                            results\n                        })\n                    }\n                } else {\n                    this.setState({\n                        results: {\n                            circuitBreakerLoading: false,\n                            circuitBreakerEnabled: true,\n                            error: null,\n                            status: \"Circuit breaker enabled\"\n                        }\n                    })\n                }\n            }).catch(error => {\n                console.log(error)\n                this.setState({\n                    results: {\n                        circuitBreakerEnabled: false,\n                        circuitBreakerLoading: false,\n                        error: \"Error\"\n                    }\n                })\n            })\n        } else {\n            const results = this.state.results;\n            results.circuitBreakerLoading = true;\n            this.setState({\n                results\n            })\n            tokenManager.disableCircuitBreaker().then(response => {\n                if ((response.status !== 200) && (response.status !== 304)) {\n                    if (response.error_code) {\n                        this.setState({\n                            results: {\n                                error: response.user_message,\n                                loading: false,\n                            }\n                        })\n                    } else {\n                        console.log(response)\n                        const results = this.state.results;\n                        results.circuitBreakerLoading = false;\n                        results.error = \"Unknown Error\"\n                        this.setState({\n                            results\n                        })\n                    }\n                } else {\n                    const results = this.state.results;\n                    results.circuitBreakerLoading = false;\n                    results.circuitBreakerEnabled = false;\n                    results.error = null;\n                    this.setState({\n                        results\n                    })\n                }\n            }).catch(error => {\n                console.log(error)\n                this.setState({\n                    results: {\n                        circuitBreakerLoading: false,\n                        error: \"Unknown error\"\n                    }\n                })\n            })\n        }\n    }\n\n    onChangeCollect = (enable) => {\n        if (!this.state.collect.disabled) {\n            if (enable) {\n                const collect = this.state.collect;\n                collect.loading = true;\n                this.setState({\n                    collect\n                })\n                tokenManager.removeResourceSwitch().then(response => {\n                    if ((response.status !== 200) && (response.status !== 304)) {\n                        if (response.error_code) {\n                            this.setState({\n                                collect: {\n                                    error: response.user_message,\n                                    loading: false,\n                                }\n                            })\n                        } else {\n                            console.log(response)\n                            this.setState({\n                                collect: {\n                                    error: \"Unknown error\",\n                                    loading: false,\n                                }\n                            })\n                        }\n                    } else {\n                        this.setState({\n                            collect: {\n                                loading: false,\n                                error: null,\n                                disabled: false,\n                                checked: false,\n                                status: \"OK\"\n                            }\n                        })\n                    }\n                }).catch(error => {\n                    console.log(error)\n                    this.setState({\n                        collect: {\n                            loading: false,\n                            error: \"Error\"\n                        }\n                    })\n                })\n            } else {\n                const collect = this.state.collect;\n                collect.loading = true;\n                this.setState({\n                    collect\n                })\n                tokenManager.createResourceSwitch().then(res => {\n                    if (res.error_code) {\n                        console.log(res);\n                        this.setState({\n                            collect: {\n                                loading: false,\n                                error: \"Error\"\n                            }\n                        })\n                    } else {\n                        this.setState({\n                            collect: {\n                                loading: false,\n                                error: null,\n                                disabled: false,\n                                checked: true,\n                                status: \"SUSPENDED\"\n                            }\n                        })\n                    }\n                }).catch(error => {\n                    console.log(error)\n                    this.setState({\n                        collect: {\n                            loading: false,\n                            error: \"Error\"\n                        }\n                    })\n                })\n            }\n        }\n    }\n\n    loadCollectStatus = () => {\n        tokenManager.getCollectStatus().then(\n            response => {\n                if((response.status !== 200) && (response.status !== 304)) {\n                    if (response.error_code) {\n                        this.setState({\n                            collect: {\n                                error: response.user_message,\n                                loading: false,\n                                disabled: true\n                            }\n                        })\n                } else {\n                    this.setState({\n                        collect: {\n                            error: \"Unknown error\",\n                            loading: false,\n                            disabled: true\n                        }\n                    })\n                }\n                } else {\n                    this.setState({\n                        collect: {\n                            status: response.data.status,\n                            loading: false,\n                            checked: response.data.status !== \"OK\",\n                            disabled: false\n                        }\n                    })\n                }\n            }\n        ).catch(error => {\n            console.log(error)\n        });\n    }\n\n    loadResultsStatus = () => {\n        tokenManager.getResultsStatus().then(\n            response => {\n                if ((response.status !== 200) && (response.status !== 304)) {\n                    if (response.error_code) {\n                        this.setState({\n                            results: {\n                                error: response.user_message,\n                                loading: false,\n                                disabled: true\n                            }\n                        })\n                    } else {\n                        console.log(response)\n                        this.setState({\n                            results: {\n                                error: \"Unknown error\",\n                                loading: false,\n                                disabled: true\n                            }\n                        })\n                    }\n                } else {\n                    this.setState({\n                        results: {\n                            status: response.data.status,\n                            loading: false,\n                            checked: response.status !== \"OK\",\n                            disabled: false\n                        }\n                    })\n                }\n            }\n        ).catch(error => {\n            console.log(error)\n        });\n\n        const results = this.state.results;\n        results.circuitBreakerLoading = true;\n        this.setState({\n            results\n        });\n        tokenManager.getCircuitBreakerStatus().then(\n            response => {\n                const results = this.state.results;\n                results.circuitBreakerLoading = false;\n                results.circuitBreakerEnabled = (response.data.status === \"enabled\")\n                this.setState({\n                    results\n                });\n            }\n        ).catch(error => {\n            console.log(error);\n            const results = this.state.results;\n            results.error = \"Unknown error\";\n            results.circuitBreakerLoading = false;\n            this.setState({\n                results\n            });\n        })\n    }\n\n    loadStatus = async () => {\n        this.loadCollectStatus();\n        this.loadResultsStatus();\n    }\n\n    render() {\n        return <Homepage\n            name={this.props.name}\n            collect={this.state.collect}\n            results={this.state.results}\n            metrics={this.state.metrics}\n            cb={{\n                onChangeCollect: this.onChangeCollect,\n                onClickRetrieve: this.onClickRetrieve,\n                onChangeCircuitBreaker: this.onChangeBreaker,\n                startTest: this.startTest,\n                stopTest: this.stopTest\n            }}\n        />\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        name: state.auth.name\n    }\n}\nexport default connect(mapStateToProps)(HomepageContainer);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { apiUserLoggedOut } from '../../redux/actions';\nimport Menu from './Menu';\n\nclass MenuContainer extends Component {\n    logout = _ => {\n        sessionStorage.removeItem('auth');\n        this.props.dispatch(apiUserLoggedOut());\n    }\n\n    render() {\n        return <Menu loggedIn={this.props.loggedIn} logout={this.logout}/>\n    }\n}\n\nexport default connect((state) => {return {}})(MenuContainer);","import React from 'react';\nimport HomepageContainer from '../../components/Main/HomepageContainer';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MenuContainer from '../../components/UI/MenuContainer';\n\nconst Homepage = ({ match: { params } }) => {\n    return (\n        <div>\n            <MenuContainer loggedIn={true} />\n            <Container>\n                <Row>\n                    <Col style={{ padding: \"2em\" }}>\n                        <HomepageContainer />\n                    </Col>\n                </Row>\n            </Container >\n        </div>\n    )\n}\n\nexport default Homepage;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadingApiUser } from \"../../redux/actions\";\nimport tokenManager from \"../../utils/tokenManager\";\nimport LoadSpinner from \"../UI/LoadSpinner\";\nimport Menu from \"../UI/Menu\";\n\nclass Login extends Component {\n\n    componentDidMount() {\n        this.props.dispatch(loadingApiUser())\n        tokenManager.login().then(\n            auth => {\n                if(auth) {\n                    tokenManager.storeUserIfValidJWT(auth);\n                } else {\n                    tokenManager.expireUser();\n                }\n            }\n        ).catch(error => {\n            console.log(error)\n        })\n        this.props.history.push(\"/\")\n    }\n    render() {\n        return (<div>\n            <Menu loggedIn={false} />\n            <LoadSpinner />\n        </div>)\n    }\n}\n\nexport default connect((state) => { return {} })(Login);","import React from 'react';\nimport Login from '../../components/Main/Login';\n\nconst LoginScreen = ({ match: { params }, history }) => {\n    return <Login history={history}/>\n}\n\nexport default LoginScreen;","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap'\n\nimport './App.css';\n\nimport User from './components/Main/loggedIn';\nimport Homepage from './screens/Main/Homepage';\nimport Login from './screens/Main/Login';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Container style={{ marginTop: '1em' }}>\n        <Route path=\"/\" exact component={User(Homepage)} />\n        <Route path=\"/login\" component={Login} />\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './redux/index';\nimport './icons';\n\nimport App from './App';\nimport tokenManager from './utils/tokenManager';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer,\n    composeEnhancers()\n)\n\ntokenManager.initialize(store);\ntokenManager.loadApiUser();\n\nReactDOM.render(\n\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n)\n"],"sourceRoot":""}